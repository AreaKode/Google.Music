<Window x:Class="GooglePlayMusic.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GooglePlayMusic.Common"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:controlzEx="clr-namespace:ControlzEx;assembly=MaterialDesignThemes.Wpf"
        Icon="{StaticResource GoogleMusicLogo}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        mc:Ignorable="d"
        x:Name="Window"
        MinWidth="600"
        MinHeight="600"
        Title="Google Play Music" Height="768" Width="1024">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary>
                    <Style TargetType="{x:Type materialDesign:PopupBox}" x:Key="MaterialDesignPopupBoxNoPadding">
                        <Setter Property="ToggleContent" Value="{StaticResource MaterialDesignPopupBoxToggleContent}" />
                        <Setter Property="HorizontalAlignment" Value="Left" />
                        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth3" />
                        <Setter Property="TextElement.FontWeight" Value="Normal" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type materialDesign:PopupBox}">
                                    <ControlTemplate.Resources>
                                        <Style TargetType="ToggleButton" x:Key="ToggleButtonStyle">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <materialDesign:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"                                                          
                                                    ClipToBounds="False"
                                                    materialDesign:RippleAssist.IsCentered="True"
                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Padding="{TemplateBinding Padding}" 
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ControlTemplate.Resources>
                                    <Grid>
                                        <ToggleButton x:Name="PART_Toggle" Style="{StaticResource ToggleButtonStyle}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
                                      Content="{TemplateBinding ToggleContent}" ContentTemplate="{TemplateBinding ToggleContentTemplate}"
                                      Cursor="Hand"
                                      VerticalAlignment="Center"
                                      />
                                        <controlzEx:PopupEx x:Name="PART_Popup" IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupOpen, Mode=TwoWay}"
                                            CustomPopupPlacementCallback="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PopupPlacementMethod}"                                            
                                            HorizontalOffset="5"
                                            VerticalOffset="5"
                                            PlacementTarget="{Binding ElementName=PART_Toggle}"
                                            Placement="Custom"
                                            PopupAnimation="Fade"
                                            AllowsTransparency="True">
                                            <materialDesign:Card Content="{TemplateBinding PopupContent}" ContentTemplate="{TemplateBinding PopupContentTemplate}"
                                      Foreground="{DynamicResource MaterialDesignBody}"
                                      FontSize="15"
                                      FontWeight="Regular"
                                      Padding="{TemplateBinding Padding}"
                                      RenderOptions.ClearTypeHint="Enabled"                                      
                                      Margin="5">
                                                <materialDesign:Card.Resources>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="VerticalContentAlignment" Value="Bottom" />
                                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                                        <Setter Property="Padding" Value="16 0 16 16" />
                                                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup Name="CommonStates">
                                                                                <VisualStateGroup.Transitions>
                                                                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                            <CircleEase EasingMode="EaseOut"/>
                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                    </VisualTransition>
                                                                                </VisualStateGroup.Transitions>
                                                                                <VisualState Name="Normal"/>
                                                                                <VisualState Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="Opacity"
                                                                                         To="0.1" Duration="0"/>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState Name="Disabled"/>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <Border x:Name="MouseOverBorder"
                                                                Opacity="0"
                                                                Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"/>
                                                                        <materialDesign:Ripple Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                                                    Focusable="False"
                                                                    MinHeight="48"
                                                                    Content="{TemplateBinding Content}"
                                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"                                                                
                                                                    Padding="{TemplateBinding Padding}"/>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </materialDesign:Card.Resources>
                                            </materialDesign:Card>
                                        </controlzEx:PopupEx>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <materialDesign:DialogHost Identifier="RootDialog">
        <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="212">
                    <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                                  DockPanel.Dock="Top"
                                  HorizontalAlignment="Right" Margin="16"
                                  IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="229*"/>
                    <RowDefinition Height="100px"/>
                </Grid.RowDefinitions>
                <materialDesign:ColorZone Grid.Row="0" Mode="PrimaryMid" Padding="16">
                    <DockPanel>
                        <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" VerticalAlignment="Center"
                                  DockPanel.Dock="Right" />
                        <StackPanel Orientation="Horizontal"
                            materialDesign:RippleAssist.IsCentered="True">
                            <ToggleButton Style="{DynamicResource MaterialDesignHamburgerToggleButton}"  x:Name="MenuToggleButton" />
                            <materialDesign:ColorZone Mode="Standard" Padding="8 4 8 4" CornerRadius="2" Panel.ZIndex="1"
                                   Margin="16 0 0 0"
                                   materialDesign:ShadowAssist.ShadowDepth="Depth1">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Button Style="{DynamicResource MaterialDesignToolButton}">
                                        <materialDesign:PackIcon Kind="Magnify" Opacity=".56" />
                                    </Button>
                                    <TextBox Grid.Column="1" Margin="8 0 0 0" local:HintAssist.Hint="Build a search bar" 
                                     materialDesign:TextFieldAssist.DecorationVisibility="Hidden" BorderThickness="0"
                                     MinWidth="200" VerticalAlignment="Center" />
                                </Grid>
                            </materialDesign:ColorZone>
                            <Button Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="8 0 0 0" Panel.ZIndex="0">
                                <materialDesign:PackIcon Kind="Send" />
                            </Button>
                        </StackPanel>
                    </DockPanel>
                </materialDesign:ColorZone>
                <Grid Grid.Row="1">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                        <Frame NavigationUIVisibility="Hidden" x:Name="ContentProvider" Source="Pages/Login.xaml"></Frame>
                    </ScrollViewer>
                </Grid>
                <Grid Grid.Row="2" Margin="0,5,0,-5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="8px"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.ColumnSpan="3">
                        <ProgressBar BorderThickness="0" Value="10" Background="Transparent" Opacity="0.15" Foreground="Black" x:Name="TrackBufferProgressBar"/>
                        <ProgressBar BorderThickness="0" Value="5" Background="Transparent" x:Name="TrackProgressBar"/>
                        
                    </Grid>
                    <StackPanel HorizontalAlignment="Left" Grid.Column="0" Grid.Row="1" Orientation="Horizontal">
                        <Image ToolTip="Current Track Album Art" x:Name="SongImage"></Image>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="10px"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Grid.Row="1" FontSize="18px" HorizontalAlignment="Left" x:Name="SongTitleLabel"></Label>
                            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Left">
                                <Label FontSize="10px" Cursor="Hand" x:Name="SongAlbumLabel"></Label>
                                <Label FontSize="10px" Cursor="Hand" x:Name="SongArtistLabel"></Label>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="111,0,122,0" Grid.Column="1" Grid.Row="1">
                        <Button BorderBrush="{DynamicResource MaterialDesignPaper}" Height="32" Width="32" Background="{DynamicResource MaterialDesignPaper}" Foreground="Black" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                        Margin="0 0 8 0" HorizontalAlignment="Left"
                        ToolTip="Skip Track Back">
                            <materialDesign:PackIcon Kind="SkipPrevious" Height="24" Width="24" />
                        </Button>
                        <ToggleButton Height="60"  Width="60"
                                Style="{StaticResource MaterialDesignActionToggleButton}"
                    	        Margin="0,10,8,10" ToolTip="Play / Pause Music" Click="ToggleButton_OnChecked"
                                x:Name="PlayPauseMusic">
                            <materialDesign:ToggleButtonAssist.OnContent>
                                <materialDesign:PackIcon Kind="Pause" Width="32" Height="32" />
                            </materialDesign:ToggleButtonAssist.OnContent>
                            <materialDesign:PackIcon Kind="Play" Width="32" Height="32" />
                        </ToggleButton>
                        <Button BorderBrush="{DynamicResource MaterialDesignPaper}" Height="32" Width="32" Background="{DynamicResource MaterialDesignPaper}" Foreground="Black" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                        Margin="0 0 8 0" HorizontalAlignment="Left"
                        ToolTip="Skip Track">
                            <materialDesign:PackIcon Kind="SkipNext" Height="24" Width="24" />
                        </Button>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Right" Grid.Column="2" Orientation="Horizontal" Grid.Row="1">

                        <materialDesign:PopupBox Background="Pink" Margin="30, 0" PlacementMode="TopAndAlignRightEdges" HorizontalAlignment="Center" Style="{StaticResource MaterialDesignPopupBoxNoPadding}">
                            <materialDesign:PopupBox.ToggleContent>
                                <materialDesign:PackIcon Kind="PlaylistPlay" Width="24" Height="24" />
                            </materialDesign:PopupBox.ToggleContent>

                            <Frame  Padding="0, -10, 0, 0" Source="Pages/Queue/Standard.xaml" NavigationUIVisibility="Hidden" 
                                    Height="{Binding ElementName=Window, Path=PopupQueueHeight}" Width="{Binding ElementName=Window, Path=PopupQueueWidth}"/>
                        </materialDesign:PopupBox>
                    </StackPanel>
                </Grid>
            </Grid>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>

